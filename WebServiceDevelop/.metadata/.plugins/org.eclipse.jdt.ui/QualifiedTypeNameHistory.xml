<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.lang.Collections"/>
    <fullyQualifiedTypeName name="com.airport.service.MemberUserDetailsServiceImpl"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.security.authorization.AuthenticatedAuthorizationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="org.apache.commons.logging.Log"/>
    <fullyQualifiedTypeName name="lombok.extern.java.Log"/>
    <fullyQualifiedTypeName name="org.apache.juli.logging.Log"/>
    <fullyQualifiedTypeName name="com.airport.jwt.JwtService"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties.Jwt"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Jwt"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.annotation.AuthenticationPrincipal"/>
    <fullyQualifiedTypeName name="com.airport.jwt.JWTAuthenticationFilter"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="java.security.Key"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.SignatureAlgorithm"/>
    <fullyQualifiedTypeName name="jakarta.annotation.PostConstruct"/>
    <fullyQualifiedTypeName name="java.util.Base64"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.security.Keys"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Jwts"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Claims"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="jakarta.servlet.http.HttpServletRequest"/>
    <fullyQualifiedTypeName name="jakarta.servlet.http.HttpServletResponse"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.AuthenticationException"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.io.IOException"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
    <fullyQualifiedTypeName name="jakarta.persistence.EnumType"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.util.StringUtils"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.webservices.client.WebServiceTemplateAutoConfiguration"/>
    <fullyQualifiedTypeName name="jakarta.servlet.FilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="com.airport.domain.Member.UserRoleEnum"/>
    <fullyQualifiedTypeName name="com.airport.auth.UserDetailsImpl"/>
    <fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
    <fullyQualifiedTypeName name="com.airport.auth.UserDetailsServiceImpl"/>
    <fullyQualifiedTypeName name="org.springframework.security.authorization.AuthorizationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"/>
    <fullyQualifiedTypeName name="com.airport.jwt.JwtAuthenticationFilter"/>
    <fullyQualifiedTypeName name="com.airport.jwt.JwtAuthorizationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="com.airport.domain.Member"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.reactive.PathRequest"/>
    <fullyQualifiedTypeName name="com.airport.jwt.JwtUtil"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="java.sql.Blob"/>
</qualifiedTypeNameHistroy>
