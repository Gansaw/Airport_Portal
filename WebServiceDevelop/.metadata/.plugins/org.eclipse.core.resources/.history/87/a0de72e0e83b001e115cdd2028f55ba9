package com.airport.domain;
import java.util.ArrayList;
import java.util.Collection;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Data
@Getter
@Setter
@Builder
@NoArgsConstructor
@AllArgsConstructor
@ToString
@Entity
@Table(name = "member")
@JsonIgnoreProperties({ "hibernateLazyInitializer", "handler" })
public class Member {
    @Id
    private String username;
    private String password;    
    private String role;
    private boolean enabled;   
    
	public Collection<? extends GrantedAuthority> getAuthorities() {
		Collection<GrantedAuthority> auth = new ArrayList<GrantedAuthority>();
		
		if (role.equals("ROLE_ADMIN")) {
			auth.add(new SimpleGrantedAuthority("ROLE_ADMIN"));
		} else {
			auth.add(new SimpleGrantedAuthority("ROLE_USER"));
		}
        return auth;        
	}

}
