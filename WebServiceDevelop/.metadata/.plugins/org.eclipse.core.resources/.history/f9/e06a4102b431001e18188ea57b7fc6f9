package com.airport.config;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

import com.airport.service.MemberUserDetailsServiceImpl;

@EnableWebSecurity
@Configuration
public class SecurityConfig {	
	
	@Autowired
	private MemberUserDetailsServiceImpl userDetailsService;
	
	@Autowired
	public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception{
		auth.userDetailsService(userDetailsService)
		.passwordEncoder(new BcryptPasswordEncoder());
	}
	


	@Bean
	public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception{		
		http.csrf(csrf -> csrf.disable());
		http.cors(cors -> cors.disable());			
		http.authorizeHttpRequests(auth->{
			auth.anyRequest().permitAll();
		});		
				
		return http.build();
	}
	

}