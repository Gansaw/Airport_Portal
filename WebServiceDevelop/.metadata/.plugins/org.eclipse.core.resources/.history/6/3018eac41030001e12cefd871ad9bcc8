package com.airport.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

import com.airport.service.MemberUserDetailsServiceImpl;

@EnableWebSecurity
@Configuration
public class SecurityConfig {	
	
	@Autowired
	private MemberUserDetailsServiceImpl userDetailsServiceImpl;
	
    @Bean
    public BCryptPasswordEncoder bCryptPasswordEncoder() {
        return new BCryptPasswordEncoder();
    }

	@Bean
	public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception{		
		http.csrf(csrf -> csrf.disable());
		http.cors(cors -> cors.disable());		
		
		http.formLogin(frmLogin -> {
			frmLogin.loginPage("/login")
			.defaultSuccessUrl("/loginSuccess", true);
		});	
		
		http.exceptionHandling(ex -> ex.accessDeniedPage("/errors/accessDeny"));
		
		http.logout(logt -> {
			logt.invalidateHttpSession(true)
			.deleteCookies("JSESSIONID")
			.logoutSuccessUrl("/login");
		});
		
				
		return http.build();
	}
	

}
