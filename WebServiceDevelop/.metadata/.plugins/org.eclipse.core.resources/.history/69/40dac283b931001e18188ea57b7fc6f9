package com.airport.jwt;

import java.security.Key;
import java.util.Date;

import org.springframework.http.HttpHeaders;
import org.springframework.stereotype.Component;

import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import io.jsonwebtoken.security.Keys;
import jakarta.servlet.http.HttpServletRequest;

@Component
public class JwtService {
	   public static final String AUTHORIZATION_HEADER = "Authorization";      // Header KEY 값
	    public static final String AUTHORIZATION_KEY = "auth";      // 사용자 권한 값의 KEY
	    public static final String BEARER_PREFIX = "Bearer ";       // Token 식별자
	    private static final long TOKEN_TIME = 60 * 60 * 1000L;        // 토큰 만료시간 : 60분
	    
//	서명된 JWT 토큰 생성
	public String getToken(String username) {
		String token = Jwts.builder()
				.setSubject(username)
				.setExpiration(new Date(System.currentTimeMillis() + EXPIRATIONTIME))
				.signWith(SECRET_KEY)
				.compact();
		
		return token;		
	}
	
//	요청 권한 부여 헤더에서 토큰을 가져와 토큰을 확인한 후 사용자 이름을 얻음
	public String getAuthUser(HttpServletRequest req) {
		String token = req.getHeader(HttpHeaders.AUTHORIZATION);
		
		if (token != null) {
			String user = Jwts.parserBuilder()
					.setSigningKey(SECRET_KEY)
					.build()
					.parseClaimsJws(token.replace(PREFIX, ""))
					.getBody()
					.getSubject();
			
			if (user != null)
				return user;
							
		}
		return null;
	}

}
